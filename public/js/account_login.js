// Generated by CoffeeScript 1.3.1
var accounts;

if (!(typeof accounts !== "undefined" && accounts !== null)) {
  accounts = [];
}

define(['eg/eg_api', 'plugin'], function(eg) {
  return (function($) {
    var content, deferreds;
    content = '<form name="login" method="post" action="/login">\n  <div data-role="fieldcontain">\n    <label for="email">Email:</label>\n    <input name="email" id="email" type="text" />\n  </div>\n  <div data-role="fieldcontain">\n    <label for="password">Password:</label>\n    <input name="password" id="password" type="password" />\n  </div>\n  <div class="ui-grid-a">\n    <div class="ui-block-a">\n      <button type="reset">Cancel</button>\n    </div>\n    <div class="ui-block-b">\n      <button type="submit" class="submit">Log in</button>\n    </div>\n  </div>\n</form>\n<a href="/auth/facebook">Login with Facebook</a>';
    deferreds = [];
    return $.fn.account_login = function() {
      var $account_login, cancel,
        _this = this;
      if (this.plugin()) {
        return this;
      }
      $account_login = this.plugin('account_login');
      this.find('.content').html(content).trigger('refresh');
      this.on('submit', 'form[name="login"]', function() {
        console.log($('form input[name="email"]').val());
        console.log("password:");
        console.log($('form input[name="password"]').val());
        $.ajax({
          url: '/login',
          type: 'POST',
          data: {
            email: $('form input[name="email"]').val(),
            password: $('form input[name="password"]').val()
          },
          success: function(data) {
            var name, password, username,
              _this = this;
            if (data.message != null) {
              return $().publish('notice', [data.message]);
            } else {
              accounts = data.user.accounts;
              if (accounts[0] != null) {
                console.log("accounts exists");
                username = data.user.accounts[0].id;
                password = data.user.accounts[0].password;
                name = data.user.accounts[0].name;
                eg.openils('auth.session.create', {
                  username: username,
                  password: password,
                  type: 'opac',
                  org: 1
                }, function(resp) {
                  $('input[name="password"]').val('').end();
                  while (deferreds.length > 0) {
                    deferreds.pop().call();
                  }
                  $().publish('session.login', [name]);
                  $("body").pagecontainer("change", "#main");
                });
                return {
                  error: function(data) {
                    var response;
                    console.log("error creating openils session.");
                    response = JSON.parse(data.responseText);
                    return $().publish('notice', [response.message]);
                  }
                };
              } else {
                console.log("no accounts yet");
                $('.manage_account', this).show();
                require(['manage_account'], function() {
                  return $('#card_list').manage_account();
                });
                return $("body").pagecontainer("change", "#manage_account");
              }
            }
          }
        });
        return false;
      }).on('click', 'button[type=reset]', cancel = function() {
        $.mobile.changePage("/");
        _this.find('input[name=email]').val('').end();
        deferreds = [];
        return false;
      }).on('keyup', 'input', function(e) {
        switch (e.keyCode) {
          case 27:
            cancel.call(_this);
        }
        return false;
      });
      return $account_login.subscribe('session.required', function(d) {
        $.mobile.changePage($(this));
        deferreds.push(d);
        return false;
      });
    };
  })(jQuery);
});
