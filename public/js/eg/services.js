// Generated by CoffeeScript 1.3.1

define(['eg/fieldmapper', 'eg/date', 'eg/eg_api', 'eg/auth', 'exports', 'md5'], function(fm, date, eg, auth, services) {
  return (function($) {
    var a2o, api_version, i0, i1, i2, i3, o1, o3, o4, o5, o6, s1;
    i0 = function() {
      return [auth.session.id];
    };
    i1 = function(id) {
      return [id];
    };
    i2 = function(id) {
      return [auth.session.id, id];
    };
    i3 = function(id) {
      return [auth.session.id, id || auth.session.user.id];
    };
    s1 = function(o) {
      return [o.search];
    };
    o1 = function(x) {
      return x.payload[0];
    };
    o3 = function(x) {
      return fm.fieldmap(o1(x));
    };
    a2o = function(xs) {
      var o, x, _i, _len;
      o = {};
      for (_i = 0, _len = xs.length; _i < _len; _i++) {
        x = xs[_i];
        o[x.id] = x;
      }
      return o;
    };
    o4 = function(x) {
      return a2o(o3(x));
    };
    o6 = function(x) {
      return fm.flatten_tree(o3(x));
    };
    o5 = function(x) {
      return a2o(o6(x));
    };
    api_version = '2.0';
    $.extend(true, services, {
      'actor.container.create': {
        i: function(x) {
          var cbreb;
          cbreb = {
            items: null,
            btype: 'bookbag',
            id: null,
            name: '',
            owner: auth.session.user.id,
            pub: false
          };
          return [
            auth.session.id, 'biblio', fm.mapfield({
              cbreb: $.extend(cbreb, x)
            })
          ];
        },
        t: 'number',
        s: true
      },
      'actor.container.full_delete': {
        i: function(id) {
          return [auth.session.id, 'biblio', id];
        },
        t: 'number',
        s: true
      },
      'actor.container.retrieve_by_class': {
        i: function(id) {
          return [auth.session.id, id || auth.session.user.id, 'biblio', 'bookbag'];
        },
        o: o3,
        s: true
      },
      'actor.container.flesh': {
        i: function(bucket_id) {
          return [auth.session.id, 'biblio', bucket_id];
        },
        o: o3,
        s: true
      },
      'actor.container.item.create': {
        i: function(item) {
          return [
            auth.session.id, 'biblio', fm.mapfield({
              cbrebi: item
            })
          ];
        },
        t: 'number',
        s: true
      },
      'actor.container.item.delete': {
        i: function(id) {
          return [auth.session.id, 'biblio', id];
        },
        t: 'number',
        s: true
      },
      'actor.container.update': {
        i: function(cbreb) {
          return [
            auth.session.id, 'biblio', fm.mapfield({
              cbreb: cbreb
            })
          ];
        },
        t: 'number',
        s: true
      },
      'actor.org_types.retrieve': {
        o: o4,
        c: 24 * 60
      },
      'actor.org_tree.retrieve': {
        o: o5,
        c: 24 * 60
      },
      'actor.org_tree.descendants.retrieve': {
        i: function(id) {
          return [id || 1];
        },
        o: o6,
        c: 24 * 60
      },
      'actor.patron.settings.retrieve': {
        i: i3,
        o: function(data) {
          auth.session.settings = o1(data);
          return auth.session.settings;
        },
        t: 'prefs',
        s: true
      },
      'actor.patron.settings.update': {
        i: function(obj) {
          return [auth.session.id, auth.session.user.id, obj];
        },
        t: 'number',
        s: true
      },
      'actor.note.retrieve.all': {
        i: function(id) {
          return [
            auth.session.id, {
              patronid: id || auth.session.user.id,
              pub: 1
            }
          ];
        },
        s: true
      },
      'actor.ou_setting.ancestor_default': {
        i: function(request) {
          return [1, request];
        }
      },
      'actor.user.checked_out': {
        i: i3,
        s: true
      },
      'actor.user.checked_out.authoritative': {
        i: i3,
        s: true
      },
      'actor.user.checked_out.count': {
        i: i3,
        s: true,
        o: function(data) {
          var o;
          o = o1(data);
          if (o.total == null) {
            o.total = 0;
          }
          return o;
        }
      },
      'actor.user.checked_out.count.authoritative': {
        i: i3,
        s: true,
        o: function(data) {
          var o;
          o = o1(data);
          if (o.total == null) {
            o.total = 0;
          }
          return o;
        }
      },
      'actor.user.email.update': {
        i: i2,
        t: 'number',
        s: true
      },
      'actor.user.password.update': {
        i: function(pw) {
          return [auth.session.id, pw.new_password, pw.old_password];
        },
        t: 'number',
        s: true
      },
      'actor.user.username.update': {
        i: i2,
        t: 'number',
        s: true
      },
      'actor.user.fleshed.retrieve': {
        i: i3,
        o: o3,
        s: true
      },
      'actor.user.fleshed.retrieve_by_barcode': {
        i: i2,
        o: o3,
        s: true
      },
      'actor.user.fines.summary': {
        i: i3,
        o: o3,
        s: true
      },
      'actor.user.payments.retrieve': {
        i: function(obj) {
          return [auth.session.id, auth.session.user.id, obj];
        },
        o: function(o) {
          var x, _i, _len, _ref;
          _ref = o.payload;
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            x = _ref[_i];
            x.mp = fm.fieldmap(x.mp);
          }
          return o.payload;
        },
        s: true
      },
      'actor.user.fines.summary.authoritative': {
        i: i3,
        o: function(x) {
          var ox;
          ox = o1(x);
          if (!ox) {
            ox = {
              __c: 'mous',
              __p: ['0.0', '0.0', '0.0', 0]
            };
          }
          return fm.fieldmap(ox);
        },
        s: true
      },
      'actor.user.transactions.have_charge.fleshed': {
        i: i3,
        o: function(data) {
          return $.map(o1(data), function(x) {
            x.circ = fm.fieldmap(x.circ || {});
            x.mvr = fm.fieldmap(x.record || {});
            x.mbts = fm.fieldmap(x.transaction || {});
            delete x.record;
            delete x.transaction;
            return x;
          });
        },
        s: true
      },
      'actor.username.exists': {
        i: i2,
        t: 'number',
        s: true
      },
      'auth.authenticate.init': {
        i: i1,
        o: function(data) {
          return auth.session.cryptkey = o1(data);
        }
      },
      'auth.authenticate.complete': {
        i: function(o) {
          o.password = hex_md5(auth.session.cryptkey + hex_md5(o.password));
          return [o];
        },
        o: function(data) {
          var response;
          response = o1(data);
          if (data.status !== void 0 && data.status !== 200) {
            auth.session.id = 0;
            throw data;
          }
          if (response.ilsevent !== void 0 && response.ilsevent !== 0) {
            auth.session.id = 0;
            throw response;
          }
          response = response.payload;
          auth.session.id = response.authtoken;
          auth.session.time = response.authtime;
          auth.session.timeout = date.now() + (response.authtime * 1000);
          $.ajaxSetup($.extend({}, eg.ajaxOptions, {
            beforeSend: function(xhr) {
              return xhr.setRequestHeader('X-OILS-Authtoken', auth.session.id);
            }
          }));
          auth.setup_timeout(response.authtime);
          return response;
        }
      },
      'auth.session.create': {
        action: function(method, o, d) {
          var pw, un;
          un = o.username;
          if (!(un && (un.replace(/\s+/, "")).length)) {
            return false;
          }
          pw = o.password;
          if (!(pw && (pw.replace(/\s+/, "")).length)) {
            return false;
          }
          parallel({
            cryptkey: eg.openils('auth.authenticate.init', un),
            regex: eg.openils('actor.ou_setting.ancestor_default', 'opac.barcode_regex')
          }).next(function(x) {
            var barcode, _ref;
            barcode = new RegExp(((_ref = x.regex) != null ? _ref.value : void 0) ? "^" + x.regex.value + "$" : '^\\d+');
            if (un.match(barcode)) {
              o.barcode = un;
              delete o.username;
            }
            eg.openils('auth.authenticate.complete', o, function(resp) {
              if (resp.ilsevent != null) {
                return;
              }
              parallel([eg.openils('actor.patron.settings.retrieve'), eg.openils('auth.session.retrieve')]).next(function() {
                d.call(resp);
              });
            });
          });
        }
      },
      'auth.session.delete': {
        i: i0,
        o: function(data) {
          $.extend(true, auth, auth.no_session);
          $.ajaxSetup(eg.ajaxOptions);
          $().publish('session.logout');
          auth.setup_timeout(0);
          return o1(data);
        }
      },
      'auth.session.retrieve': {
        i: i0,
        o: function(data) {
          return auth.session.user = o3(data);
        },
        s: true
      },
      'auth.authenticate.confirm_the_server': {
        action: function(method, obj, d) {
          return $.ajax({
            url: "/xul/rel_" + obj.client + "/server",
            t: 'get',
            dataType: 'html',
            success: function(data) {
              return d.call(data);
            }
          });
        }
      },
      'circ.open_non_cataloged_circulation.user': {
        i: i3,
        s: true
      },
      'circ.holds.id_list.retrieve.authoritative': {
        i: i3,
        s: true
      },
      'circ.holds.retrieve': {
        i: i3,
        o: o3,
        s: true
      },
      'circ.hold.details.retrieve.authoritative': {
        i: i2,
        o: function(o) {
          o = o1(o);
          o.mvr = fm.fieldmap(o.mvr);
          o.hold = fm.fieldmap(o.hold);
          o.status = (function() {
            switch (Number(o.status)) {
              case 1:
                return 'Waiting for copy to become available';
              case 2:
                return 'Waiting for copy capture';
              case 3:
                return 'In transit';
              case 4:
                return 'Ready for Pickup';
              default:
                return 'Error';
            }
          })();
          return o;
        },
        s: true
      },
      'circ.hold.queue_stats.retrieve': {
        i: i2,
        o: function(o) {
          o = o1(o);
          o.status = (function() {
            switch (Number(o.status)) {
              case 1:
                return 'Waiting for copy to become available';
              case 2:
                return 'Waiting for copy capture';
              case 3:
                return 'In transit';
              case 4:
                return 'Ready for Pickup';
              default:
                return 'Error';
            }
          })();
          return o;
        },
        s: true
      },
      'circ.hold.status.retrieve': {
        i: i2,
        o: function(data) {
          switch (Number(o1(data))) {
            case 1:
              return [1, 'Waiting for copy to become available'];
            case 2:
              return [2, 'Waiting for copy capture'];
            case 3:
              return [3, 'In transit'];
            case 4:
              return [4, 'Ready for Pickup'];
            default:
              return ['-1', 'Error'];
          }
        },
        s: true
      },
      'circ.holds.create': {
        i: function(x) {
          var ahr, cfg, user;
          user = auth.session.user;
          cfg = auth.session.settings;
          ahr = $.extend({
            hold_type: 'T',
            usr: user.id,
            pickup_lib: (cfg != null ? cfg['opac.default_pickup_location'] : void 0) || user.home_ou
          }, x);
          if (cfg) {
            if (/email/i.test(cfg['opac.hold_notify'])) {
              ahr.email_notify = true;
            }
            if (/phone/i.test(cfg['opac.hold_notify'])) {
              ahr.phone_notify = cfg['opac.default_phone'] || user.day_phone || user.evening_phone || user.other_phone;
            }
            if (/sms/i.test(cfg['opac.hold_notify'])) {
              ahr.sms_notify = cfg['opac.default_sms_notify'];
              ahr.sms_carrier = cfg['opac.default_sms_carrier'];
            }
          }
          return [
            auth.session.id, fm.mapfield({
              ahr: ahr
            })
          ];
        },
        t: 'number',
        s: true
      },
      'circ.hold.update': {
        i: function(ahr) {
          return [
            auth.session.id, fm.mapfield({
              ahr: ahr
            })
          ];
        },
        t: 'number',
        s: true
      },
      'circ.hold.cancel': {
        i: i2,
        t: 'number',
        s: true
      },
      'circ.title_hold.is_possible': {
        i: function(x) {
          var obj;
          obj = $.extend({
            patronid: auth.session.user.id,
            pickup_lib: auth.session.settings['opac.default_pickup_location'] || auth.session.user.home_ou
          }, x);
          return [auth.session.id, obj];
        },
        s: true
      },
      'circ.money.billing.retrieve.all': {
        i: i2,
        o: o3,
        s: true
      },
      'circ.money.payment': {
        i: function(x) {
          var obj;
          obj = {
            userid: auth.session.user.id
          };
          $.extend(obj, x);
          return [auth.session.id, obj, auth.session.user.last_xact_id];
        },
        o: o1,
        s: true
      },
      'circ.money.payment_receipt.email': {
        i: i2,
        o: o1,
        s: true
      },
      'circ.money.payment_receipt.print': {
        i: i2,
        o: function(atev) {
          atev = fm.fieldmap(o1(atev));
          atev.template_output = fm.fieldmap(atev.template_output);
          return atev;
        },
        s: true
      },
      'circ.retrieve': {
        i: i2,
        o: o3,
        s: true
      },
      'circ.retrieve.authoritative': {
        i: i2,
        o: o3,
        s: true
      },
      'circ.renew': {
        i: function(copy) {
          return [
            auth.session.id, {
              patron: auth.session.user.id,
              copyid: copy,
              opac_renewal: 1
            }
          ];
        },
        o: function(result) {
          result = result.payload[0];
          if (result.textcode === 'SUCCESS') {
            result = result.payload;
            result.circ = fm.fieldmap(result.circ);
            result.copy = fm.fieldmap(result.copy);
            result.record = fm.fieldmap(result.record);
          }
          return result;
        },
        s: true
      },
      'ingest.full.biblio.record.readonly': {
        i: i1
      },
      'search.asset.call_number.retrieve': {
        i: i1,
        o: o3,
        c: 5
      },
      'search.asset.copy.retrieve': {
        i: i1,
        o: o3,
        c: 5
      },
      'search.asset.copy.retrieve_by_cn_label': {
        i: function(o) {
          if (api_version === '2.0') {
            o.cn = o.cn[1];
          }
          return [o.id, o.cn, o.org_id];
        },
        c: 5
      },
      'search.asset.copy.fleshed2.find_by_barcode': {
        i: i1,
        o: o3,
        c: 5
      },
      'search.asset.copy.fleshed2.retrieve': {
        i: i1,
        o: o3,
        c: 5
      },
      'search.authority.crossref.batch': {
        i: function(obj, callback) {
          var input;
          input = [];
          $.each(obj, function(type, obj2) {
            return $.each(obj2, function(n) {
              return input.push([type, n]);
            });
          });
          return [input];
        },
        c: 5
      },
      'search.bib_id.by_barcode': {
        i: i1,
        t: 'number',
        c: 5
      },
      'search.biblio.bib_level_map.retrieve.all': {
        o: o3,
        c: 24 * 60
      },
      'search.biblio.lit_form_map.retrieve.all': {
        o: o3,
        c: 24 * 60
      },
      'search.biblio.item_form_map.retrieve.all': {
        o: o3,
        c: 24 * 60
      },
      'search.biblio.item_type_map.retrieve.all': {
        o: o3,
        c: 24 * 60
      },
      'search.biblio.audience_map.retrieve.all': {
        o: o3,
        c: 24 * 60
      },
      'search.biblio.isbn': {
        i: s1,
        t: 'search',
        c: 5
      },
      'search.biblio.issn': {
        i: s1,
        t: 'search',
        c: 5
      },
      'search.biblio.marc': {
        i: function(search) {
          return [
            {
              searches: search.search,
              limit: 200,
              org_unit: search.org_unit || 1,
              depth: search.depth || 0,
              sort: search.sort,
              sort_dir: search.sort_dir
            }, search.limit, search.offset
          ];
        },
        t: 'search',
        c: 5
      },
      'search.biblio.mods_from_copy': {
        i: i1,
        o: o3,
        c: 5
      },
      'search.biblio.tcn': {
        i: s1,
        t: 'search',
        c: 5
      },
      'search.biblio.multiclass.query': {
        i: function(o) {
          var av, n, spaces, term, v, vv, x, _i, _j, _k, _len, _len1, _len2, _ref, _ref1, _ref2;
          if (o.available) {
            o.available = Number(o.available);
          }
          if (o.item_type) {
            if ($.isArray(o.item_type)) {
              o.item_type = $.map(o.item_type, function(x) {
                return x;
              });
              _ref = o.item_type;
              for (n = _i = 0, _len = _ref.length; _i < _len; n = ++_i) {
                v = _ref[n];
                if (v) {
                  o.item_type[n] = v.split('');
                }
              }
            } else {
              if (o.item_type) {
                o.item_type = o.item_type.split('');
              }
            }
            o.item_type = $.map(o.item_type, function(x) {
              return x;
            });
          }
          if (o.year_begin) {
            switch (x = o.pub_year_verb) {
              case 'between':
                o['between'] = [o.year_begin, o.year_end];
                break;
              case 'is':
                o['between'] = [o.year_begin, o.year_begin];
                break;
              default:
                o[x] = o.year_begin;
            }
          }
          spaces = /\ +/;
          _ref1 = ['term', 'search_term_verb', 'default_class'];
          for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
            x = _ref1[_j];
            if (!$.isArray(o[x])) {
              o[x] = [o[x]];
            }
          }
          x = (function() {
            var _k, _len2, _ref2, _results;
            _ref2 = o.term;
            _results = [];
            for (n = _k = 0, _len2 = _ref2.length; _k < _len2; n = ++_k) {
              v = _ref2[n];
              if (!(v)) {
                continue;
              }
              v = (av = ($.trim(v)).split(spaces)).join(' ');
              v = (function() {
                switch (o.search_term_verb[n]) {
                  case '=':
                    return "\"" + v + "\"";
                  case '-':
                    return ((function() {
                      var _l, _len3, _results1;
                      _results1 = [];
                      for (_l = 0, _len3 = av.length; _l < _len3; _l++) {
                        vv = av[_l];
                        _results1.push('-' + vv);
                      }
                      return _results1;
                    })()).join(' ');
                  default:
                    return v;
                }
              })();
              _results.push("" + o.default_class[n] + ":" + v);
            }
            return _results;
          })();
          term = x.join(' ');
          if (o.sort) {
            switch (o.sort) {
              case 'pubdate asc':
                o.sort = 'pubdate';
                o.sort_dir = 'asc';
                break;
              case 'pubdate desc':
                o.sort = 'pubdate';
                o.sort_dir = 'desc';
                break;
              case 'title asc':
                o.sort = 'title';
                o.sort_dir = 'asc';
                break;
              case 'title desc':
                o.sort = 'title';
                o.sort_dir = 'desc';
                break;
              case 'author asc':
                o.sort = 'author';
                o.sort_dir = 'asc';
                break;
              case 'author desc':
                o.sort = 'author';
                o.sort_dir = 'desc';
                break;
              default:
                o.sort = '';
            }
          }
          _ref2 = ['default_class', 'pub_year_verb', 'search_term_verb', 'term', 'type', 'year_begin', 'year_end'];
          for (_k = 0, _len2 = _ref2.length; _k < _len2; _k++) {
            x = _ref2[_k];
            delete o[x];
          }
          return [o, term, 1];
        },
        o: function(data) {
          var x;
          x = o1(data);
          x.ids = $.map(x.ids, function(v) {
            return v;
          });
          return x;
        },
        t: 'search',
        c: 5
      },
      'search.biblio.record_entry.slim.retrieve': {
        i: i1,
        o: o3,
        c: 5
      },
      'search.biblio.record.mods_slim.retrieve': {
        i: i1,
        o: o3,
        c: 5
      },
      'search.biblio.metarecord.mods_slim.retrieve': {
        i: i1,
        o: o3,
        c: 5
      },
      'search.biblio.record.copy_count': {
        i: function(o) {
          return [o.location, o.id];
        },
        o: function(data) {
          var x, y;
          x = o1(data);
          y = {};
          $.each(x, function(i, xi) {
            return y[i] = {
              available: xi.available,
              count: xi.count,
              depth: xi.depth,
              org_unit: xi.org_unit
            };
          });
          return y;
        },
        c: 5
      },
      'search.biblio.record.html': {
        i: i1,
        c: 5
      },
      'search.biblio.copy_counts.summary.retrieve': {
        i: i1,
        o: function(data) {
          data = o1(data);
          $.each(data, function(n) {
            api_version = this.length === 3 ? '2.0' : '2.2';
            return data[n] = this.length === 3 ? {
              org_id: Number(this[0]),
              callnumber: ['', this[1], ''],
              available: this[2]
            } : {
              org_id: Number(this[0]),
              callnumber: [this[1], this[2], this[3]],
              available: this[4]
            };
          });
          return data;
        },
        c: 5
      },
      'search.biblio.copy_location_counts.summary.retrieve': {
        i: function(o) {
          return [o.id, o.org_id, o.depth];
        },
        o: function(data) {
          data = o1(data);
          $.each(data, function(n) {
            api_version = this.length === 3 ? '2.0' : '2.2';
            return data[n] = this.length === 4 ? {
              org_id: Number(this[0]),
              callnumber: ['', this[1], ''],
              copylocation: this[2],
              available: this[3]
            } : {
              org_id: Number(this[0]),
              callnumber: [this[1], this[2], this[3]],
              copylocation: this[4],
              available: this[5]
            };
          });
          return data;
        },
        c: 5
      },
      'search.callnumber.retrieve': {
        i: i1,
        o: o3,
        c: 5
      },
      'search.callnumber.browse': {
        i: function(o) {
          return [o.callnumber || '', o.org_id || 1, o.size || 9, o.offset || 0];
        },
        o: function(data) {
          $.each(o1(data, function(n, data) {
            data.cn = fm.fieldmap(data.cn);
            return data.mods = fm.fieldmap(data.mods);
          }));
          return o1(data);
        },
        c: 5
      },
      'search.config.copy_status.retrieve.all': {
        o: o4,
        c: 24 * 60
      },
      'search.metabib.record_to_descriptors': {
        i: function(id) {
          return [
            {
              record: id
            }
          ];
        },
        o: function(data) {
          var x;
          x = o1(data);
          x.descriptors = fm.fieldmap(x.descriptors);
          return x;
        },
        c: 5
      },
      'search': {
        action: function(m, search, d) {
          var limit, method, request;
          limit = auth.logged_in() ? auth.session.settings['opac.hits_per_page'] : 10;
          switch (search.type) {
            case 'advanced':
              method = 'search.biblio.multiclass.query';
              request = $.extend({
                offset: 0,
                limit: limit
              }, search);
              break;
            case 'lccn':
              method = 'search.biblio.marc';
              request = {
                search: [
                  {
                    term: search.term,
                    restrict: [
                      {
                        tag: '010',
                        subfield: '_'
                      }
                    ]
                  }
                ],
                offset: 0,
                limit: limit
              };
              break;
            case 'marc':
              method = 'search.biblio.marc';
              request = search;
              break;
            case 'isbn':
              method = 'search.biblio.isbn';
              request = search;
              break;
            case 'issn':
              method = 'search.biblio.issn';
              request = search;
              break;
            case 'tcn':
              method = 'search.biblio.tcn';
              request = search;
              break;
            default:
              throw {
                name: 'BadSearch',
                message: 'Unknown search type'
              };
          }
          return eg.openils(method, request, function(result) {
            return d.call(result);
          });
        }
      },
      'search.google_books': {
        c: 24 * 60,
        action: function(method, isbn, d) {
          isbn = isbn.match(/^\d+/)[0];
          return $.getJSON("http://books.google.com/books?jscmd=viewapi&bibkeys=" + isbn + "&callback=?", function(info) {
            if (!(info = info[isbn])) {
              return;
            }
            info.isbn = isbn;
            return d.call(info);
          });
        }
      },
      'search.google_books_rating': {
        c: 24 * 60,
        action: function(method, isbn, d) {
          return eg.openils('search.google_books', isbn, function(info) {
            var id;
            id = info.info_url.split('id=')[1].split('&')[0];
            return $.getJSON("http://www.google.com/books/feeds/volumes/" + id + "?alt=json-in-script&callback=?", function(info) {
              var ratings, ret;
              if (!(ratings = info.entry.gd$rating)) {
                return;
              }
              ret = {};
              $.each(ratings, function(k, v) {
                return ret[k] = Number(v);
              });
              return d.call(ret);
            });
          });
        }
      },
      'search.extras': {
        c: 24 * 60,
        action: function(method, request, d) {
          return $.ajax({
            dataType: 'html',
            success: function(data) {
              return d.call(data);
            },
            type: 'GET',
            url: "/opac/extras/ac/" + request.type + "/small/" + request.isbn
          });
        }
      },
      '': {}
    });
  })(jQuery);
});
