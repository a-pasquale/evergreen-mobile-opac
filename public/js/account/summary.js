// Generated by CoffeeScript 1.3.1

define(['eg/eg_api', 'eg/auth', 'template', 'plugin', 'account/fines', 'account/checkouts', 'account/holds'], function(eg, auth, _) {
  return (function($) {
    var refresh_all, refresh_bookbags_summary, refresh_checkouts_summary, refresh_fines_summary, refresh_holds_summary, tpl_bookbags_summary, tpl_checkouts_summary, tpl_fines_summary, tpl_holds_summary;
    tpl_fines_summary = _.template('$<%= nf %> fines owing');
    refresh_fines_summary = function() {
      $('#fines_summary').openils('fines summary', 'actor.user.fines.summary.authoritative', function(o) {
        var nf;
        return $('.summary_line', this).text(tpl_fines_summary({
          nf: nf = o.balance_owed
        }));
      });
      return false;
    };
    tpl_checkouts_summary = _.template('<%= nco %> items checked out,\n<%= nod %> overdue,\n<%= nxx %> other items');
    refresh_checkouts_summary = function() {
      $('#checkouts_summary').openils('checkouts summary', 'actor.user.checked_out.count.authoritative', function(o) {
        var nco, nod, nxx;
        return $('.summary_line', this).text(tpl_checkouts_summary({
          nco: nco = o.out,
          nod: nod = o.overdue,
          nxx: nxx = o.total - nco - nod
        }));
      });
      return false;
    };
    tpl_holds_summary = _.template('<%= nh %> items on hold');
    refresh_holds_summary = function() {
      $('#holds_summary').openils('holds summary', 'circ.holds.id_list.retrieve.authoritative', function(o) {
        var nh;
        return $('.summary_line', this).text(tpl_holds_summary({
          nh: nh = o.length
        }));
      });
      return false;
    };
    tpl_bookbags_summary = _.template('<%= nbb %> bookbags created');
    refresh_bookbags_summary = function() {
      $('#bookbags_summary').openils('bookbags summary', 'actor.container.retrieve_by_class', function(o) {
        var nbb;
        return $('.summary_line', this).text(tpl_bookbags_summary({
          nbb: nbb = o.length
        }));
      });
      return false;
    };
    refresh_all = function() {
      console.log("refreshing all summaries");
      refresh_fines_summary();
      refresh_checkouts_summary();
      refresh_holds_summary();
      $('#account_fines').fines();
      console.log("applying detail plugin");
      $('#account_checkouts').checkouts();
      return $('#account_holds').holds();
    };
    return $.fn.acct_summary = function() {
      var _this = this;
      if (this.plugin()) {
        return this;
      }
      this.plugin('acct_summary');
      $('#account_fines').fines();
      console.log("applying detail plugin");
      $('#account_checkouts').checkouts();
      $('#account_holds').holds();
      if (auth.logged_in()) {
        refresh_all();
      } else {
        this.openils('account summaries', 'auth.session.retrieve', refresh_all);
      }
      this.subscribe('session.login', function() {
        $('.account_summary', _this).show();
        refresh_all();
        return false;
      }).subscribe('session.logout', function() {
        $('.account_summary', _this).hide();
        return false;
      }).subscribe('account.fines_summary', refresh_fines_summary).subscribe('account.checkouts_summary', refresh_checkouts_summary).subscribe('account.holds_summary', refresh_holds_summary).subscribe('account.bookbags_summary', refresh_bookbags_summary).refresh(refresh_all);
      $(this).on({
        expand: function() {
          $('.plugin', this).refresh().publish("account." + ($('h3', this).prop('id')));
        },
        collapse: function() {
          $('.plugin', this).empty();
        }
      }, '.account_summary').subscribe('session.login', function() {
        var ps, _i, _len, _ref;
        _ref = $('.plugin', this);
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          ps = _ref[_i];
          if ($(ps).closest('.ui-collapsible-content').prop('aria-hidden') === 'false') {
            $(ps).refresh();
          }
        }
        return false;
      }).subscribe('session.logout', function() {
        var ps, _i, _len, _ref;
        _ref = $('.plugin', this);
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          ps = _ref[_i];
          if ($(ps).closest('.ui-collapsible-content').prop('aria-hidden') === 'false') {
            $(ps).empty();
          }
        }
        return false;
      });
      return this;
    };
  })(jQuery);
});
