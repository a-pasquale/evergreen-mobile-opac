// Generated by CoffeeScript 1.3.1

define(['eg/eg_api', 'eg/auth', 'template', 'opac/ou_tree', 'plugin'], function(eg, auth, _, OU) {
  return (function($) {
    var format_callnumber;
    format_callnumber = function(cn) {
      return $.trim("" + cn[0] + " " + cn[1] + " " + cn[2]);
    };
    return $.fn.holding_details = function(title_id, search_ou, search_depth, status_names) {
      var $plugin, datestamp, holding_details, pad, show_due_date, show_holding, tpl_due_date, tpl_holding_details;
      holding_details = '<div data-role="collapsible" data-collapsed="false" data-inset="false">\n	<h3>Copies available for this title</h3>\n	<ul data-role="listview" data-inset="false"></ul>\n</div>';
      tpl_holding_details = _.template('<li class="holding status_line" id="<%= holding_id %>">\n	<div>\n		<span><span title="Circulating branch or library" class="value"><%= h.org_name %></span></span>\n		<span> / <span title="Name of collection" class="value"><%= h.copylocation %></span></span>\n		<span> / <span title="Call number" class="value"><%= callnumber %></span></span>\n	</div>\n	<span title="Copy status" class="copy_status">\n		<span class="value"><%= h.Available %></span> available\n	</span>\n	<span title="Copy status" class="copy_status">\n		<span class="value"><%= h.Lost %></span> lost\n	</span>\n	<span title="Copy status" class="copy_status">\n		<span class="value"><%= h.Missing %></span> missing\n	</span>\n	<span title="Copy status" class="copy_status">\n		<span class="value"><%= h.Cleaning %></span> cleaning\n	</span>\n	<span title="Copy status" class="copy_status">\n		<span class="value"><%= h.Mending %></span> mending\n	</span>\n	<span title="Copy status" class="copy_status">\n		<span class="value"><%= h.Reshelving %></span> reshelving\n	</span>\n	<span title="Copy status" class="copy_status">\n		<span class="value"><%= in_process %></span> in process\n	</span>\n	<span title="Copy status" class="copy_status">\n		<span class="value"><%= in_transit %></span> in transit\n	</span>\n	<span title="Copy status" class="copy_status">\n		<span class="value"><%= on_holds_shelf %></span> on holds shelf\n	</span>\n	<span title="Copy status" class="copy_status">\n		<span class="value"><%= on_order %></span> on order\n	</span>\n	<span title="Copy status" class="copy_status">\n		<span class="value"><%= checked_out %></span> checked out\n	</span>\n</li>');
      show_holding = function(holding_id, copy) {
        this.append(tpl_holding_details({
          holding_id: holding_id,
          h: copy,
          callnumber: format_callnumber(copy.callnumber),
          checked_out: copy['Checked out'],
          in_process: copy['In process'],
          in_transit: copy['In transit'],
          on_holds_shelf: copy['On holds shelf'],
          on_order: copy['On order']
        })).find('.value').each(function() {
          if (!$(this).text()) {
            return $(this).parent().remove();
          }
        });
        return this.listview('refresh');
      };
      tpl_due_date = _.template('<span id="<%= barcode %>">Due date <%= duedate %></span>');
      pad = function(x) {
        if (x < 10) {
          return '0' + x;
        } else {
          return x;
        }
      };
      datestamp = function(x) {
        return "" + (pad(x.getMonth() + 1)) + "/" + (pad(x.getDate())) + "/" + (x.getFullYear());
      };
      show_due_date = function(x) {
        var due_date;
        due_date = x.circulations != null ? x.circulations[0].due_date : '';
        if (due_date) {
          this.append(tpl_due_date({
            barcode: x.barcode,
            duedate: datestamp(due_date)
          }));
        }
      };
      ($plugin = this.html(holding_details).trigger('create')).find('[data-role="listview"]').openils("holding details #" + title_id, 'search.biblio.copy_location_counts.summary.retrieve', {
        id: title_id,
        org_id: search_ou,
        depth: search_depth
      }, function(copy_location) {
        var copy, holding_id, id, n, _i, _len, _ref;
        if (copy_location instanceof Error) {
          return this.failed('holding details');
        } else {
          this.succeeded();
        }
        if (copy_location.length === 0) {
          $plugin.empty().trigger('create');
          return;
        }
        this.publish('opac.title_hold', [title_id]);
        for (_i = 0, _len = copy_location.length; _i < _len; _i++) {
          copy = copy_location[_i];
          copy.org_name = OU.id_name(copy.org_id);
          _ref = copy.available;
          for (id in _ref) {
            n = _ref[id];
            copy[status_names[id].name] = n;
          }
          if (!(search_depth <= OU.id_depth(copy.org_id))) {
            continue;
          }
          holding_id = ("" + copy.org_id + " " + title_id + " " + (format_callnumber(copy.callnumber))).replace(/\s+|\.+/g, '_');
          show_holding.call(this, holding_id, copy);
          if (copy['Checked out']) {
            (function(holding_id, copy) {
              var $holding;
              return $holding = $("#" + holding_id).openils('due dates', 'search.asset.copy.retrieve_by_cn_label', {
                id: title_id,
                cn: copy.callnumber,
                org_id: copy.org_id
              }, function(ids) {
                var copy_id, _j, _len1, _results;
                _results = [];
                for (_j = 0, _len1 = ids.length; _j < _len1; _j++) {
                  copy_id = ids[_j];
                  _results.push($holding.openils("due dates #" + copy_id, 'search.asset.copy.fleshed2.retrieve', copy_id, show_due_date));
                }
                return _results;
              });
            })(holding_id, copy);
          }
        }
        if (this.children().length === 0) {
          $plugin.empty().trigger('create');
        }
      });
      return this;
    };
  })(jQuery);
});
